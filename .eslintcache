[{"D:\\Prog\\web\\react-portfolio\\src\\index.js":"1","D:\\Prog\\web\\react-portfolio\\src\\App.js":"2","D:\\Prog\\web\\react-portfolio\\src\\reportWebVitals.js":"3","D:\\Prog\\web\\react-portfolio\\src\\components\\AboutMe.js":"4","D:\\Prog\\web\\react-portfolio\\src\\components\\Dialog.js":"5","D:\\Prog\\web\\react-portfolio\\src\\components\\Play.js":"6","D:\\Prog\\web\\react-portfolio\\src\\components\\NavMenu.js":"7","D:\\Prog\\web\\react-portfolio\\src\\components\\Story.js":"8"},{"size":499,"mtime":1610142519415,"results":"9","hashOfConfig":"10"},{"size":296,"mtime":1612964399869,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":1334,"mtime":1613929534412,"results":"13","hashOfConfig":"10"},{"size":759,"mtime":1614004676561,"results":"14","hashOfConfig":"10"},{"size":1547,"mtime":1614004650159,"results":"15","hashOfConfig":"10"},{"size":451,"mtime":1612961797159,"results":"16","hashOfConfig":"10"},{"size":573,"mtime":1613168183208,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"10mtd0b",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\Prog\\web\\react-portfolio\\src\\index.js",[],["37","38"],"D:\\Prog\\web\\react-portfolio\\src\\App.js",[],"D:\\Prog\\web\\react-portfolio\\src\\reportWebVitals.js",[],"D:\\Prog\\web\\react-portfolio\\src\\components\\AboutMe.js",["39"],"import React, { Component } from \"react\";\r\nimport classnames from 'classnames';\r\n\r\nclass AboutMe extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const classes = ['light'];\r\n    let sprite;\r\n    if (!this.props.isLighten) {\r\n      sprite = <img src=\"Sprite-0001-dark1.png\" alt=\"sprite\"></img>;\r\n    } else {\r\n      sprite = <img src=\"Sprite-001-light1.png\" alt=\"sprite\"></img>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"AboutMe\">\r\n\r\n      <div className={`sides ${this.props.storyMode ? 'curtains' : ''}`} onClick={this.props.lightenUp}></div>\r\n        <div className={classnames('bg', this.props.isLighten ? classes.join(' ') : '')}>\r\n          <div className=\"sprite\" onClick={this.props.handleSpriteClick}>\r\n            {sprite}\r\n          </div>\r\n          <div className={`stay-button ${this.props.storyMode || !this.props.isLighten ? 'hidden' : ''}`} onClick={this.props.handleStay}>stay</div>\r\n          <div className={`left-button ${this.props.storyMode || !this.props.isLighten ? 'hidden' : ''}`}></div>\r\n          <div className={`right-button ${this.props.storyMode || !this.props.isLighten ? 'hidden' : ''}`}></div>\r\n        </div>\r\n        <div className={`sides ${this.props.storyMode ? 'curtains' : ''}`}></div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutMe;\r\n","D:\\Prog\\web\\react-portfolio\\src\\components\\Dialog.js",["40"],"D:\\Prog\\web\\react-portfolio\\src\\components\\Play.js",["41"],"D:\\Prog\\web\\react-portfolio\\src\\components\\NavMenu.js",["42","43","44","45"],"import React, { Component } from 'react'\r\n\r\nexport class NavMenu extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"NavMenu\">\r\n                <nav>\r\n                    <a>Главная</a>\r\n                    <a>Рассказ</a>\r\n                    <a>Портфолио</a>\r\n                    <a>Контакты</a>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavMenu\r\n","D:\\Prog\\web\\react-portfolio\\src\\components\\Story.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":6,"column":3,"nodeType":"52","messageId":"53","endLine":8,"endColumn":4},{"ruleId":"54","severity":1,"message":"55","line":13,"column":63,"nodeType":"56","messageId":"57","endLine":13,"endColumn":65},{"ruleId":"58","severity":1,"message":"59","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":13},{"ruleId":"62","severity":1,"message":"63","line":8,"column":21,"nodeType":"64","endLine":8,"endColumn":24},{"ruleId":"62","severity":1,"message":"63","line":9,"column":21,"nodeType":"64","endLine":9,"endColumn":24},{"ruleId":"62","severity":1,"message":"63","line":10,"column":21,"nodeType":"64","endLine":10,"endColumn":24},{"ruleId":"62","severity":1,"message":"63","line":11,"column":21,"nodeType":"64","endLine":11,"endColumn":24},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Story' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]