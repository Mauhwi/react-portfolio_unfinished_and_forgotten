[{"D:\\Prog\\web\\react-portfolio\\src\\index.js":"1","D:\\Prog\\web\\react-portfolio\\src\\App.js":"2","D:\\Prog\\web\\react-portfolio\\src\\reportWebVitals.js":"3","D:\\Prog\\web\\react-portfolio\\src\\components\\AboutMe.js":"4","D:\\Prog\\web\\react-portfolio\\src\\components\\Dialog.js":"5","D:\\Prog\\web\\react-portfolio\\src\\components\\Play.js":"6","D:\\Prog\\web\\react-portfolio\\src\\components\\NavMenu.js":"7","D:\\Prog\\web\\react-portfolio\\src\\components\\Story.js":"8"},{"size":525,"mtime":1614270506194,"results":"9","hashOfConfig":"10"},{"size":314,"mtime":1614173764529,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1614173764566,"results":"12","hashOfConfig":"10"},{"size":1289,"mtime":1617614390453,"results":"13","hashOfConfig":"10"},{"size":2747,"mtime":1617567898961,"results":"14","hashOfConfig":"10"},{"size":3497,"mtime":1617886234423,"results":"15","hashOfConfig":"10"},{"size":415,"mtime":1617112425537,"results":"16","hashOfConfig":"10"},{"size":3805,"mtime":1619104572640,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1mkiu0z",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Prog\\web\\react-portfolio\\src\\index.js",[],["38","39"],"D:\\Prog\\web\\react-portfolio\\src\\App.js",[],"D:\\Prog\\web\\react-portfolio\\src\\reportWebVitals.js",[],"D:\\Prog\\web\\react-portfolio\\src\\components\\AboutMe.js",["40"],"import React, { Component } from \"react\";\r\n\r\nclass AboutMe extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let sprite;\r\n    if (!this.props.isLighten) {\r\n      sprite = <img src=\"Sprite-0001-dark1.png\" alt=\"sprite\"></img>;\r\n    } else {\r\n      sprite = <img src=\"Sprite-001-light1.png\" alt=\"sprite\"></img>;\r\n    }\r\n\r\n    return (\r\n      <div className={`AboutMe ${this.props.isLoading ? 'closed' : ''}`}>\r\n\r\n        <div className={`bg ${this.props.isLighten ? 'light' : ''}`}>\r\n          <div className={`sprite ${this.props.animationRunning ? 'disabled' : ''}`} onClick={this.props.handleSpriteClick}>\r\n            {sprite}\r\n          </div>\r\n          <div className={`stay-button ${this.props.isLoading || !this.props.isLighten ? 'hidden' : ''} ${this.props.animationRunning ? 'disabled' : ''}`} onClick={this.props.handleStay}>stay</div>\r\n          <div className={`left-button ${this.props.isLoading || !this.props.isLighten ? 'hidden' : ''} ${this.props.animationRunning ? 'disabled' : ''}`}></div>\r\n          <div className={`right-button ${this.props.isLoading || !this.props.isLighten ? 'hidden' : ''} ${this.props.animationRunning ? 'disabled' : ''}`}></div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutMe;\r\n","D:\\Prog\\web\\react-portfolio\\src\\components\\Dialog.js",["41","42","43","44","45","46"],"import React, { Component } from \"react\";\r\n\r\nexport class Dialog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stringArray: [],\r\n    };\r\n    this.textProvider = this.textProvider.bind(this)\r\n  }\r\n\r\n  textProvider(element, index, last) {\r\n    document.querySelector(\".text\").innerHTML += element;\r\n    if (index == last) {\r\n      this.props.animationLock();\r\n    }\r\n  }\r\n\r\n  stringAnimation() {\r\n    document.querySelector(\".text\").innerHTML = \"\";\r\n    let last = this.state.stringArray.length - 1;\r\n    this.state.stringArray.forEach((element, index) => {\r\n      setTimeout(this.textProvider, 26 * (index + 1), element, index, last);\r\n    });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    return (this.props.textId !== nextProps.textId || this.props.isLighten !== nextProps.isLighten \r\n      || this.props.storyMode !== nextProps.storyMode || this.props.isLoading !== nextProps.isLoading);\r\n  }\r\n\r\n  // stringAnimation() {\r\n  //   document.querySelector(\".text\").innerHTML = \"\";\r\n  //   let last = this.state.stringArray.length - 1;\r\n  //   this.state.stringArray.forEach((element, index) => {\r\n  //     setTimeout(function() {\r\n  //       document.querySelector(\".text\").innerHTML += element;\r\n  //       if (index == last) {\r\n  //         console.log(index)\r\n  //       }\r\n  //     }, 50 * (index + 1));\r\n  //   });\r\n  // }\r\n\r\n  render() {\r\n    let avatar;\r\n    let text;\r\n\r\n    if (!this.props.isLighten) {\r\n      avatar = <img src=\"avatar-dark.png\" alt=\"background\"></img>;\r\n      text = \"...\";\r\n    } else if (this.props.isLoading) {\r\n      this.props.counterReset();\r\n      avatar = <img src=\"avatar-story.png\" alt=\"avatar\"></img>;\r\n      text = ''\r\n      this.state.stringArray = text.split(\"\");\r\n      this.stringAnimation();\r\n    } else if (!this.props.storyMode) {\r\n      avatar = <img src=\"avatar-dark-bg.png\" alt=\"avatar\"></img>;\r\n      text = this.props.text\r\n        .filter((textLine) => textLine.id == this.props.textId)\r\n        .map((textLine) => textLine.engText)\r\n        .toString();\r\n      this.state.stringArray = text.split(\"\");\r\n      this.stringAnimation();\r\n    }  else if (this.props.storyMode) {\r\n      avatar = <img src=\"avatar-story.png\" alt=\"avatar\"></img>;\r\n      text = this.props.storyText\r\n        .filter((textLine) => textLine.id == this.props.textId)\r\n        .map((textLine) => textLine.engText)\r\n        .toString();\r\n      this.state.stringArray = text.split(\"\");\r\n      this.stringAnimation();\r\n    }\r\n\r\n    return (\r\n      <div className=\"Dialog\">\r\n        <div className=\"content-wrap\">\r\n          <div className=\"image-wrap\">{avatar}</div>\r\n          <div className=\"text\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dialog;\r\n","D:\\Prog\\web\\react-portfolio\\src\\components\\Play.js",[],"D:\\Prog\\web\\react-portfolio\\src\\components\\NavMenu.js",["47","48","49","50"],"import React, { Component } from 'react'\r\n\r\nexport class NavMenu extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"NavMenu\">\r\n                <nav>\r\n                    <a>Home</a>\r\n                    <a>Story</a>\r\n                    <a>Portfolio</a>\r\n                    <a>Contacts</a>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavMenu\r\n","D:\\Prog\\web\\react-portfolio\\src\\components\\Story.js",["51","52","53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":5,"column":3,"nodeType":"60","messageId":"61","endLine":7,"endColumn":4},{"ruleId":"62","severity":1,"message":"63","line":14,"column":15,"nodeType":"64","messageId":"65","endLine":14,"endColumn":17},{"ruleId":"66","severity":1,"message":"67","line":56,"column":7,"nodeType":"68","endLine":56,"endColumn":17},{"ruleId":"62","severity":1,"message":"63","line":61,"column":43,"nodeType":"64","messageId":"65","endLine":61,"endColumn":45},{"ruleId":"66","severity":1,"message":"67","line":64,"column":7,"nodeType":"68","endLine":64,"endColumn":17},{"ruleId":"62","severity":1,"message":"63","line":69,"column":43,"nodeType":"64","messageId":"65","endLine":69,"endColumn":45},{"ruleId":"66","severity":1,"message":"67","line":72,"column":7,"nodeType":"68","endLine":72,"endColumn":17},{"ruleId":"69","severity":1,"message":"70","line":8,"column":21,"nodeType":"71","endLine":8,"endColumn":24},{"ruleId":"69","severity":1,"message":"70","line":9,"column":21,"nodeType":"71","endLine":9,"endColumn":24},{"ruleId":"69","severity":1,"message":"70","line":10,"column":21,"nodeType":"71","endLine":10,"endColumn":24},{"ruleId":"69","severity":1,"message":"70","line":11,"column":21,"nodeType":"71","endLine":11,"endColumn":24},{"ruleId":"72","severity":1,"message":"73","line":51,"column":56,"nodeType":"71","endLine":51,"endColumn":84},{"ruleId":"72","severity":1,"message":"73","line":57,"column":15,"nodeType":"71","endLine":57,"endColumn":42},{"ruleId":"72","severity":1,"message":"73","line":60,"column":15,"nodeType":"71","endLine":60,"endColumn":42},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]